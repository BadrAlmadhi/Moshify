/* Role: Object Oriented CSS role is to separate contents form container */
/* the __ is for elements inside the block and the -- is for modifiers or some specific action, state or behaviour on the block or element */

/* mobile version */
/* identify global colors of project */
:root {
  --color-primary: #2584ff;
  --color-secondary: #00d9ff;
  --color-accent: #ff3400;
  /* text colors */
  --color-headings: #1b0760;
  --color-body: #918ca4;
  --color-body-darker: #5c5577;
  --color-border: #ccc;
  --border-radius: 30px;
}

*,
*::after,
*::before {
  /* make button and a tags align in same page */
  box-sizing: border-box;
}

html {
  /* 62.5% of 16px = 10px */
  font-size: 62.5%;
}

/* role of container size  */
.container {
  max-width: 1140px;
  /* vertical is 0 and auto: horizontal will equally spread the container  */
  margin: 0 auto;
}

body {
  font-family: Inter, Arial, Helvetica, sans-serif;
  font-size: 2.4rem;
  /* line add more space to read easy */
  line-height: 1.5;
  color: var(--color-body);
}

h1,
h2,
h3 {
  color: var(--color-headings);
  margin-bottom: 1rem;
}

h1 {
  /* 62.5% of 70px = 7rem */
  font-size: 7rem;
}

h2 {
  font-size: 4rem;
}

h3 {
  font-size: 3rem;
}

p {
  margin-top: 0;
}

/* stander break point for desktop and laptop*/
@media screen and (min-width: 1024px) {
  body {
    font-size: 1.8rem;
  }
  h1 {
    font-size: 8rem;
  }
  h2 {
    font-size: 4rem;
  }
  h3 {
    font-size: 2.4rem;
  }
}

/* links */

a {
  text-decoration: none;
}

.link-arrow {
  color: var(--color-accent);
  text-transform: uppercase;
  font-size: 2rem;
  font-weight: bold;
}

/* add arrow after text content */
.link-arrow::after {
  content: "-->";
  margin-left: 5px;
  /* apply changes smoothly */
  transition: margin 1.15s;
}
/* apply hover to targeted element inserted in ::after*/
.link-arrow:hover::after {
  margin-left: 10px;
}

/* media query of links in large screen */
@media screen and (min-width: 1024px) {
  .link-arrow {
    font-size: 1.5rem;
  }
}

/* Badges */

.badge {
  border-radius: 20px;
  font-size: 2rem;
  font-weight: 600;
  padding: 0.5rem 2rem;
  /* prevent badge to wrap in new line */
  white-space: nowrap;
}

/* object oriented CSS */
.badge--primary {
  background-color: var(--color-primary);
  color: aliceblue;
}

.badge--secondary {
  background-color: var(--color-secondary);
  color: aliceblue;
}

.badge--small {
  font-size: 1.6rem;
  padding: 0.5rem 1.5rem;
}

/* badges of large screen */
@media screen and (min-width: 1024px) {
  .badge {
    font-size: 1.5rem;
  }

  .badge--small {
    font-size: 1.3rem;
  }
}

/* Lists */

.list {
  list-style: none;
  padding-left: 0;
  color: var(--color-headings);
}

/* object oriented CSS for inline style */

/* best use when give each item a class and select it here */
.list--inline .list__item {
  display: inline-block;
  margin-right: 2rem;
}

.list--tick {
  list-style-image: url(../images/tick.svg);
  padding-left: 3rem;
}

/* nesting */
.list--tick .list__item {
  padding-left: 0.5rem;
  margin-bottom: 1rem;
}

@media screen and (min-width: 1024px) {
  .list--tick .list__item {
    padding-left: 0;
  }
}

/* Images and icons */
/* we can restyle svg files using CSS */

.icon {
  width: 40px;
  height: 40px;
}

.icon--small {
  width: 30px;
  height: 30px;
}

/* OBJ CSS */
.icon--primary {
  /* fill only apply to SVG files */
  fill: var(--color-primary);
}

.icon--white {
  fill: white;
}

.icon-container {
  background: #f3f9fa;
  /* px show same width in small and large screens */
  width: 64px;
  height: 64px;
  border-radius: 100%;
  /* flex help us change position of object */
  display: inline-flex;
  /* x horizontal axes */
  justify-content: center;
  /* y axes */
  align-items: center;
}

.icon-container--accent {
  background-color: var(--color-accent);
}

/* Buttons */
/* block buttons  */

.btn {
  border-radius: 40px;
  border: 0;
  /* add click signal in button */
  cursor: pointer;
  font-size: 1.8rem;
  font-weight: 600;
  margin: 1rem 0;
  padding: 2rem 3rem;
  text-align: center;
  text-transform: uppercase;
  white-space: nowrap;
}

/* OBJ CSS */
.btn--primary {
  background: var(--color-primary);
  color: white;
}

.btn--primary:hover {
  background: #3a8ffd;
}

.btn--secondary {
  background: var(--color-secondary);
  color: white;
}

.btn--secondary:hover {
  background: #00c8eb;
}

.btn--accent {
  background: var(--color-accent);
  color: white;
}

.btn--accent:hover {
  background: #ec3000;
}

.btn--outline {
  background: white;
  color: var(--color-headings);
  border: 2px solid var(--color-headings);
}

.btn--outline:hover {
  background: var(--color-headings);
  color: white;
}

.btn--stretched {
  padding-left: 6rem;
  padding-right: 6rem;
}

.btn--block {
  /* fill entire place */
  width: 100%;
  display: inline-block;
}

@media screen and (min-width: 1024px) {
  .btn {
    font-size: 1.5rem;
  }
}

/* inputs */

.input {
  border-radius: var(--border-radius);
  border: 1px solid var(--color-border);
  color: var(--color-headings);
  font-size: 2rem;
  outline: 0;
  padding: 1.5rem 3.5rem;
}

/* style place holder */
::placeholder {
  color: #cdcdd7;
}

.input-group {
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius);
  /* add to control inline element */
  display: flex;
}

/* nesting if  input inside a group that input should not have a border*/
.input-group .input {
  border: 0;
  /* use flex-grow to allow input take over the entire space */
  flex-grow: 1;
  padding: 1.5rem 1rem;
}

/* control buttons inside input group */
.input-group .btn {
  margin: 4px;
}

@media screen and (min-width: 1024px) {
  .input {
    font-size: 1.5rem;
  }
}

/* Cards */

.card {
  border-radius: 7px;
  /* box-shadow:  Vertical, Horizontal, pluring shadow, how wide the shadow*/
  box-shadow: 0 0 20px 10px #f3f3f3;
  overflow: hidden;
}

.card__header,
.card__body {
  padding: 2rem 3rem;
}

/* BJC CSS */
/* if we have a card primary the header should be.. */
.card--primary .card__header {
  background: var(--color-primary);
  color: white;
}

.card--secondary .badge--secondary {
  background: #02cdf1;
}

.card--secondary .card__header {
  background: var(--color-secondary);
  color: white;
}

/* Plans */

.plan__name {
  color: white;
  margin: 0;
  font-weight: 500;
  font-size: 2.4rem;
}

.plan__price {
  font-size: 6rem;
}

.plan__billing-cycle {
  font-size: 2.4rem;
  opacity: 0.8;
  margin-right: 1rem;
}

.plan__description {
  font-size: 2rem;
  font-weight: 300;
  letter-spacing: 1px;
  display: block;
}

.plan .list__item {
  margin-top: 2rem;
}

.plan--popular .card__header {
  position: relative;
}

.plan--popular .card__header::before {
  content: url(../images/popular.svg);
  width: 40px;
  display: inline-block;
  position: absolute;
  top: -6px;
  right: 5%;
}

/* font adjustment */
@media screen and (min-width: 1024px) {
  .plan__name {
    font-size: 1.4rem;
  }

  .plan__price {
    font-size: 5rem;
  }

  .plan__billing-cycle {
    font-size: 1.6rem;
  }

  .plan__description {
    font-size: 1.7rem;
  }
}

/* Media  */

.media {
  display: flex;
}

.media__title {
  margin-top: 0;
}

.media__body {
  margin: 0 2rem;
}

.media__image {
  margin-top: 1rem;
}

/* Quotes */
.quote {
  font-size: 3rem;
  font-style: italic;
  color: #5c5577;
  line-height: 1.3;
}

.quote__text::before {
  /* set up the " "  */
  content: open-quote;
}

.quote__text::after {
  content: close-quote;
}

.quote__author {
  font-size: 3rem;
  font-weight: 500;
  font-style: normal;
  margin-bottom: 0;
}

.quote__organization {
  color: var(--color-headings);
  opacity: 0.4;
  font-size: 2rem;
}

.quote__line {
  position: relative;
  bottom: 10px;
}

@media screen and (min-width: 1024px) {
  .quote {
    font-size: 2rem;
  }

  .quote__author {
    font-size: 2.4rem;
  }

  .quote__organization {
    font-size: 1.6rem;
  }
}

/* Grids */
.grid {
  display: grid;
}

@media screen and (min-width: 768px) {
  .grid--cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }
}

@media screen and (min-width: 1024px) {
  .grid--cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }
}

/* testimonials */
.testimonial {
  padding: 3rem;
}

.testimonial__image {
  position: relative;
}

/* direct drive selector to target the image  */
.testimonial__image > img {
  width: 100%;
}

.testimonial__image > .icon-container {
  position: absolute;
  top: 3rem;
  /* in mine style of icon-container we have hight and wdith of 62 dvide by 2 give us 32 */
  right: -32px;
}

@media screen and (min-width: 768px) {
  .testimonial .quote,
  .testimonial .quote__author {
    font-size: 2.4rem;
  }

  .testimonial .quote {
    margin-left: 6rem;
  }
}

/* Callouts */
.callout {
  padding: 4rem;
  border-radius: 5px;
}

.callout--primary {
  background: var(--color-primary);
  color: white;
}

.callout__heading {
  color: white;
  margin-top: 0;
  font-size: 3rem;
}

.callout .btn {
  /* property we apply for grid items  */
  /* horizontal  (X)*/
  justify-self: center;
  /* vertical (Y)*/
  align-self: center;
}

.callout__content {
  text-align: center;
}

@media screen and (min-width: 768px) {
  .callout .grid--cols-2 {
    /* this will add all extra space to the first columns and the second will fit the button only */
    grid-template-columns: 1fr auto;
  }

  .callout__content {
    text-align: left;
  }

  .callout .btn {
    /* when using grid use this property to control horizontal side of a grid */
    justify-self: start;
    margin: 0 2rem;
  }
}

/* Collapsible */
.collapsible__header {
  display: flex;
  justify-content: space-between;
}

.collapsible__heading {
  margin-top: 0;
  font-size: 3rem;
}

.collapsible__chevron {
  transform: rotate(-90deg);
  transition: transform 0.3s;
}

/* hide content */
.collapsible__content {
  /* we can't use display to transition content */
  /* display: none; */
  max-height: 0;
  overflow: hidden;
  opacity: 0;
  transition: all 0.3s;
}

.collapsible--expanded .collapsible__chevron {
  transform: rotate(0);
}

/* when collapse show content */
.collapsible--expanded .collapsible__content {
  max-height: 100vh;
  opacity: 1;
}

/* Blocks */
.block {
  /* Now --padding-vertical is available for block class element and 
  all it children */
  --padding-vertical: 6rem;
  /* use padding vertical */
  padding: var(--padding-vertical) 2rem;
}

/* add new class to not text-align all block class elements */
.block__header {
  text-align: center;
}

.block__heading {
  margin-top: 0;
}

.block--dark {
  background: black;
  color: #7b858b;
}

.block--dark .block__heading {
  color: white;
}

.block--skewed-right {
  /* an we can use padding vertical here as well since it's a child of block */
  /* calc() function allow us to add 4rem to original size which equal to 10rem */
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(0% 0%, 100% 0%, 100% 100%, 0% 80%);
}

.block--skewed-left {
  /* an we can use padding vertical here as well since it's a child of block */
  /* calc() function allow us to add 4rem to original size which equal to 10rem */
  padding-bottom: calc(var(--padding-vertical) + 4rem);
  clip-path: polygon(0% 0%, 100% 0%, 100% 80%, 0% 100%);
}

/* Navigation Bar */
.nav {
  background: black;
  display: flex;
  justify-content: space-between;
  /* push items into new line */
  flex-wrap: wrap;
  padding: 0 1rem;
  align-items: center;
}

.nav__list {
  width: 100%;
  margin: 0;
}

.nav__item {
  padding: 0.5rem 2rem;
  border-bottom: 1px solid #222;
}

.nav__item > a {
  color: #d2d0db;
  transition: color 0.3s;
}

.nav__item > a:hover {
  color: #fff;
}

.nav__toggler {
  opacity: .5;
  transition: box-shadow .15s;
  cursor: pointer;
}

.nav.collapsible--expanded .nav__toggler {
  opacity: 1;
  box-shadow: 0 0 0 3px #666;
  border-radius: 5px;
}

.nav__brand {
  transform: translateY(5px);
}

@media screen and (min-width: 768px) {
  .nav__toggler {
    display: none;
  }

  .nav__list {
    width: auto;
    display: flex;
    font-size: 1.6rem;
    max-height: 100%;
    opacity: 1;
  }

  .nav__item {
    border: 0;
  }
}